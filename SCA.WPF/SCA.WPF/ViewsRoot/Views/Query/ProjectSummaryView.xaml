<UserControl x:Class="SCA.WPF.ViewsRoot.Views.Query.ProjectSummaryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             xmlns:model="clr-namespace:SCA.Model.BusinessModel;assembly=SCA.Model"
             xmlns:converter="clr-namespace:SCA.WPF.ViewModelsRoot.Converters"
             xmlns:eventToCommand="clr-namespace:SCA.WPF.Utility"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="Label" TargetType="Label">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        <converter:ComboxEmptyItemConverters x:Key="comboxEmptyItemConverter"/>
        <converter:ComboxEmptyItemForSelectedValueConverter x:Key="comboxEmptyItemForSelectedValueConverter"/>
        <converter:DeviceTypeConverter x:Key="deviceTypeConverter"/>
        <converter:LevelToMarginConverter x:Key="LevelToMarginConverter"/>
        <Style x:Key="HeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="#FFFFFF"/>
        </Style>
        <!--<Style x:Key="RowStyle" TargetType="{x:Type GridViewRowPresenter }">
            <Setter Property="Visibility" Value="Collapsed"/>            
        </Style>-->
        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="19"  Height="13"  Background="Transparent">
                            <Border Width="12" Height="14">
                                <Path x:Name="ExpandPath" Data="M 2 2 L 7 7 L 2 12 Z" HorizontalAlignment="Right" Stroke="#FF090A0A" Fill="Transparent" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="ExpandPath" Value="M 1 10 L 7 3 L 7 10 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="CellTemplate_Name">
            <StackPanel Orientation="Horizontal">
                <ToggleButton x:Name="Expander" ClickMode="Press" Style="{StaticResource ToggleButtonStyle}" 
                              IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                              Margin="{Binding Path=Level, Converter={StaticResource LevelToMarginConverter}}"
                              />
                <Image Source="{Binding Icon}"/>
                <TextBlock Text="{Binding Name}"/>
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <GridViewColumnCollection x:Key="gvcc" >
            <!--CellTemplate="{StaticResource CellTemplate_Name}"-->
            <GridViewColumn Header="名称" CellTemplate="{StaticResource CellTemplate_Name}"  Width="240"/>
            <GridViewColumn Header="数量" DisplayMemberBinding="{Binding Number}" Width="1000"/>            
        </GridViewColumnCollection>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Border Name="Bd"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter Content="{TemplateBinding Header}"
                                                   Columns="{StaticResource gvcc}"
                                                   >
                                </GridViewRowPresenter>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>                            
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                Path=IsMouseOver}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},
                                                Path=IsSelected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#ffe5f3fb"/>
                                <Setter Property="BorderBrush" Value="#ffa5d7f0"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FFE5F3FF"/>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <GridViewHeaderRowPresenter    Columns="{StaticResource gvcc}"    DockPanel.Dock="Top"   
                                                               ColumnHeaderContainerStyle="{StaticResource HeaderStyle}"
                                                               />

                                <Border BorderThickness="2">
                                    <ItemsPresenter/>
                                    
                                </Border>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Button Grid.Column="0" Grid.Row="0" Width="30"  Height="30"   Background="Transparent" BorderBrush="Transparent" Command="{Binding SaveProjectInfoCommand}">                
                <Image Source="{Binding Path=SaveIconPath,Mode=OneWay}"  ToolTip="保存" />
            </Button>
            <Button Grid.Column="1" Grid.Row="0" Width="30"  Height="30"   Background="Transparent" BorderBrush="Transparent" Command="{Binding ToggleSimulatorInfoCommand}">
                <Image Source="{Binding Path=SimulatorIconPath,Mode=OneWay}"  ToolTip="模拟联动" />
            </Button>
            
            <!--<Button Grid.Column="1" Grid.Row="0" Width="30"  Height="30"  Background="Transparent" BorderBrush="Transparent" IsEnabled="False">
                <Image Source="../../../Resources/Icon/Style1/c_download.png" ToolTip="下传"/>
            </Button>
            <Button Grid.Column="2" Grid.Row="0" Width="30"  Height="30"   Background="Transparent" BorderBrush="Transparent" IsEnabled="False">
                <Image Source="../../../Resources/Icon/Style1/c_upload.png" ToolTip="上传"/>
            </Button>-->
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Grid.Column="0" Grid.Row="0"  Style="{StaticResource Label}" >工程名称：</Label>
            <TextBox x:Name="ProjectNameInputTextBox" Grid.Column="1" Grid.Row="0"  Text="{Binding Path=ProjectName,Mode=TwoWay}"/>
            <Button Grid.Column="2" Grid.Row="0" Command="{Binding SaveProjectNameCommand}">保存</Button>
            <Label Content="{Binding PromptInfo}" Foreground="Red" Visibility="{Binding PromptInfoVisibility}"/>
        </Grid>
        <Grid x:Name="SummaryInfo" Visibility="{Binding Path=SummaryVisibility}">            
            <TreeView x:Name="list" ItemsSource="{Binding SummaryNodes }"  BorderThickness="2" >
                <TreeView.ItemTemplate >
                    <HierarchicalDataTemplate DataType="{x:Type model:SummaryInfo}" ItemsSource="{Binding ChildNodes}">
                        <Border BorderThickness="2" BorderBrush="Yellow" CornerRadius="0" Margin="1"  x:Name="back" MinWidth="70"
                                DataContext="{Binding}" >
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="{Binding Name}" Margin="2"/>
                            </StackPanel>
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>
        <StackPanel x:Name="Simulator" Visibility="{Binding Path=SimulatorVisibility}">
            <Grid x:Name="QueryZone">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="0" Content="控制器" Style="{StaticResource Label}"/>
                <!--SelectedValueBinding="{Binding TypeCode}"-->
                <ComboBox Grid.Row="0" Grid.Column="1"
                           DisplayMemberPath="Name"
                           SelectedValuePath="ID"   
                           SelectedValue="{Binding ControllerID,Mode=TwoWay}"                           
                           ItemsSource="{Binding Path= ValidController}"
                          />
                <Label Grid.Row="1" Grid.Column="0" Content="回路" Style="{StaticResource Label}"/>
                <ComboBox Grid.Row="1" Grid.Column="1"
                          DisplayMemberPath="Name"
                          SelectedValuePath="ID" 
                          IsSynchronizedWithCurrentItem= "true"
                          SelectedValue="{Binding LoopID,Mode=TwoWay,Converter={StaticResource comboxEmptyItemForSelectedValueConverter}}"                           
                          ItemsSource="{Binding Path= ValidLoops,Converter={StaticResource comboxEmptyItemConverter}}"
                          />

                <Label Grid.Row="1" Grid.Column="2" Content="楼号" Style="{StaticResource Label}"/>
                <ComboBox Grid.Row="1" Grid.Column="3"
                          DisplayMemberPath="Value"
                          SelectedValuePath="Key"
                          SelectedIndex="0"  
                          IsSynchronizedWithCurrentItem= "true"
                          SelectedValue="{Binding BuildingNo,Mode=TwoWay,Converter={StaticResource comboxEmptyItemForSelectedValueConverter}}"
                          ItemsSource="{Binding Path= BuildingNoCollection,Converter={StaticResource comboxEmptyItemConverter}}"
                          />
                <!--,Converter={StaticResource comboxEmptyItemForSelectedValueConverter}-->                
                <!--DisplayMemberPath="Name"
                          SelectedValuePath="ID"-->
                <Label Grid.Row="1" Grid.Column="4" Content="类型" Style="{StaticResource Label}"/>
                <ComboBox Grid.Row="1" Grid.Column="5"
                          SelectedIndex="0"   
                           IsSynchronizedWithCurrentItem= "true"
                           DisplayMemberPath="Name"
                           SelectedValuePath="Code"                      
                           SelectedValue="{Binding TypeCode,Mode=TwoWay,Converter={StaticResource comboxEmptyItemForSelectedValueConverter}}"                           
                           ItemsSource="{Binding Path= DeviceType,Converter={StaticResource comboxEmptyItemConverter}}"
                          />
                <!--,Converter={StaticResource comboxEmptyItemForSelectedValueConverter}-->
                <!--SelectedValue="{Binding BuildingNo,Mode=TwoWay}"-->
                <StackPanel Grid.Row="0" Grid.Column="2"  Orientation="Horizontal" >
                <CheckBox Content="标准组态"  IsChecked="{Binding Path=StandardLinkageSimulatorFlag}"/>
                <CheckBox Content="混合组态" IsChecked="{Binding Path=MixedLinkageSimulatorFlag}"/>
                <CheckBox Content="通用组态" IsChecked="{Binding Path=GeneralLinkageSimulatorFlag}"/>
                </StackPanel>
                <!--刷新按钮暂不用-->
                <!--<Button Grid.Row="0" Grid.Column="4" Content="刷新" x:Name="btnRefresh" Command="{Binding RefreshCommand}"/>-->
                <Button Grid.Row="0" Grid.Column="5" Content="模拟联动" x:Name="btnLinkageSimulator" Command="{Binding LinkageSimulatorCommand}"/>
                <GroupBox Header="选择器件" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="6"
                          Margin="0,10,0,0" 
                          x:Name="QueryGroup"
                          >
                    <ScrollViewer >
                        <DataGrid 
                          x:Name="QueryDataGrid"
                          AutoGenerateColumns="False"
                          MaxHeight="200"
                          
                          SelectionUnit="FullRow"
                          ItemsSource="{Binding QueryDeviceInfoObservableCollection}"
                        
                          >
                        <DataGrid.ItemContainerStyle>
                            <Style TargetType="DataGridRow">
                                <EventSetter Event="MouseDoubleClick" Handler="DataGrid_MouseDoubleClick"/>
                            </Style>                        
                        </DataGrid.ItemContainerStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="序号" Binding="{Binding Path=SequenceNo}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="地编号" Binding="{Binding Path=Code}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="器件类型" Binding="{Binding Path=TypeCode,Converter={StaticResource deviceTypeConverter}}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组1" Binding="{Binding Path=LinkageGroup1}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组2" Binding="{Binding Path=LinkageGroup2}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组3" Binding="{Binding Path=LinkageGroup3}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="楼号" Binding="{Binding Path=BuildingNo}"/>
                            <DataGridTextColumn  Width="*" IsReadOnly="True" Header="区号" Binding="{Binding Path=ZoneNo}"/>
                        <DataGridTextColumn Width="*" IsReadOnly="True" Header="层号" Binding="{Binding Path=FloorNo}"/>
                    </DataGrid.Columns>
                </DataGrid>
                </ScrollViewer>
                </GroupBox>
            </Grid>
            <Grid x:Name="InputZone">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <GroupBox Header="输入器件" Grid.Row="0" Grid.Column="0" 
                          Margin="0,10,0,0" 
                          x:Name="InputGroup"
                          >
                    <ScrollViewer >
                        <DataGrid 
                          x:Name="InputDataGrid"
                          AutoGenerateColumns="False"
                          MaxHeight="200"                          
                          SelectionUnit="FullRow"
                          ItemsSource="{Binding InputDeviceInfoObservableCollection}"                        
                          >
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler="InputDataGrid_MouseDoubleClick"/>
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="序号" Binding="{Binding Path=SequenceNo}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="地编号" Binding="{Binding Path=Code}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="器件类型" Binding="{Binding Path=TypeCode,Converter={StaticResource deviceTypeConverter}}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组1" Binding="{Binding Path=LinkageGroup1}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组2" Binding="{Binding Path=LinkageGroup2}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组3" Binding="{Binding Path=LinkageGroup3}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="楼号" Binding="{Binding Path=BuildingNo}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="区号" Binding="{Binding Path=ZoneNo}"/>
                                <DataGridTextColumn Width="*" IsReadOnly="True" Header="层号" Binding="{Binding Path=FloorNo}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </GroupBox>
           
            </Grid>
            <Grid x:Name="ResultZone">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <GroupBox Header="联动器件" Grid.Row="0" Grid.Column="0" 
                          Margin="0,10,0,0" 
                          x:Name="LinkageGroup"
                          >
                    <ScrollViewer >
                        <DataGrid 
                          x:Name="LinkageDataGrid"
                          AutoGenerateColumns="False"
                          MaxHeight="200"                          
                          SelectionUnit="FullRow"
                          ItemsSource="{Binding LinkageDeviceInfoObservableCollection}"                        
                          >
                            <!--<DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick" Handler=""/>
                                </Style>
                            </DataGrid.ItemContainerStyle>-->
                            <DataGrid.Columns>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="序号" Binding="{Binding Path=SequenceNo}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="范围说明" Binding="{Binding Path=Scope}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="控制器名称" Binding="{Binding Path=ControllerName}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="地编号" Binding="{Binding Path=Code}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="器件类型" Binding="{Binding Path=TypeCode,Converter={StaticResource deviceTypeConverter}}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组1" Binding="{Binding Path=LinkageGroup1}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组2" Binding="{Binding Path=LinkageGroup2}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="输出组3" Binding="{Binding Path=LinkageGroup3}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="楼号" Binding="{Binding Path=BuildingNo}"/>
                                <DataGridTextColumn  Width="*" IsReadOnly="True" Header="区号" Binding="{Binding Path=ZoneNo}"/>
                                <DataGridTextColumn Width="*" IsReadOnly="True" Header="层号" Binding="{Binding Path=FloorNo}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>
                </GroupBox>
            </Grid>
        </StackPanel>
    </StackPanel>

</UserControl>
